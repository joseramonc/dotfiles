[
  // Paste and indent
	{ "keys": ["super+v"], "command": "paste_and_indent" },
  { "keys": ["super+shift+v"], "command": "paste" },

  // Open find file
  { "keys": ["super+j"], "command": "show_overlay", "args": {"overlay": "goto", "show_files": true} },

  // Join lines
  { "keys": ["shift+super+j"], "command": "join_lines" },

  // Unindent
	{ "keys": ["shift+tab"], "command": "unindent" },

  //
  // Super + i are to act through current file, mostly.
  //
  // Reveal in sidebar
  { "keys": ["super+i"], "command": "run_multiple_commands",
    "args": {
      "commands": [
        { "command": "reveal_in_side_bar", "context": "window" },
        { "command": "focus_side_bar", "context": "window" },
      ]
    }
  },

  // Create a new file aware of current directory
  { "keys": ["super+i", "a"], "command": "run_multiple_commands",
    "args": {
      "commands": [
        { "command": "new_file", "context": "window" },
        { "command": "save", "context": "window" },
      ]
    }
  },

	{ "keys": ["super+i", "super+a"], "command": "run_multiple_commands",
    "args": {
      "commands": [
        { "command": "new_file", "context": "window" },
        { "command": "save", "context": "window" },
      ]
    }
  },

  // Open file in finder
  { "keys": ["super+i", "o"], "command": "open_dir", "args": { "dir": "$file_path", "file": "$file_name"} },
  { "keys": ["super+i", "super+o"], "command": "open_dir", "args": { "dir": "$file_path", "file": "$file_name"} },

  // Rename file
  { "keys": ["super+i", "m"], "command": "rename_file" },
  { "keys": ["super+i", "super+m"], "command": "rename_file" },

  // Delete file
  { "keys": ["super+i", "backspace"], "command": "delete_active_file" },

  // Open in github
  { "keys": ["super+i", "g"], "command": "gitlink", "args": {"line": true, "web": true } },
  { "keys": ["super+i", "super+g"], "command": "gitlink", "args": {"line": true, "web": true } },
  // Blame in github
  { "keys": ["super+i","super+b"], "command": "gitlink", "args": {"line": true, "web": true, "blame": true } },
  { "keys": ["super+i","b"], "command": "gitlink", "args": {"line": true, "web": true, "blame": true } },

  // Copy file path
  { "keys": ["super+i", "c"], "command": "copy_path" },
  { "keys": ["super+i", "super+c"], "command": "copy_path" },
  { "keys": ["super+o"], "command": "copy_path" },

  // Show sidebar
	{ "keys": ["super+\\"], "command": "toggle_side_bar" },

  // Additional comment
  { "keys": ["super+."], "command": "toggle_comment", "args": { "block": false } },

  // Dont close app with this
  { "keys": ["super+q"], "command": "noop" },

  // Dont randomly delete?
  { "keys": ["super+k", "super+k"], "command": "noop" },

  // Dont prompt to save file differently. Never want to do this
  { "keys": ["super+shift+s"], "command": "save" },

  // Dont change tabs
  { "keys": ["ctrl+shift+tab"], "command": "noop" },

  // Dont randomly change font size
  { "keys": ["super+="], "command": "noop" },
  { "keys": ["super+-"], "command": "noop" },

  // Match brackets
  { "keys": ["alt+d"], "command": "expand_selection", "args": {"to": "brackets"} },
  { "keys": ["ctrl+d"], "command": "expand_selection", "args": {"to": "brackets"} },

  // Panes
  { "keys": ["super+k", "super+up"], "command": "run_multiple_commands", "args": {
      "commands": [
        { "command": "new_pane", "context": "window" },
      ]
    }
  },
  { "keys": ["super+k", "super+right"], "command": "run_multiple_commands", "args": {
      "commands": [
        { "command": "new_pane", "context": "window" },
      ]
    }
  },
  { "keys": ["super+k", "super+left"], "command": "run_multiple_commands", "args": {
      "commands": [
        { "command": "new_pane", "context": "window" },
      ]
    }
  },
  { "keys": ["super+k", "super+down"], "command": "run_multiple_commands", "args": {
      "commands": [
        { "command": "new_pane", "context": "window" },
      ]
    }
  },

  // Switch erb tags
  { "keys": ["super+shift+."], "command": "erb", "context":
    [
      { "key": "selector", "operator": "equal", "operand": "text.html.ruby, text.haml, source.yaml, source.css, source.scss, source.js, source.coffee" }
    ]
  },
  { "keys": ["super+shift+,"], "command": "erb", "context":
    [
      { "key": "selector", "operator": "equal", "operand": "text.html.ruby, text.haml, source.yaml, source.css, source.scss, source.js, source.coffee" }
    ]
  },

  // Goto line
  { "keys": ["super+m"], "command": "show_overlay", "args": {"overlay": "goto", "text": ":"} },

  { "keys": ["alt+enter"], "command": "replace_all",
     "context": [{"key": "panel", "operand": "find_in_files"}, {"key": "panel_has_focus"}]
  },

  // Multi cursor!
  { "keys": ["alt+up"], "command": "select_lines", "args": {"forward": false} },
  { "keys": ["alt+down"], "command": "select_lines", "args": {"forward": true} },

  // Toggle quotes
  { "keys": ["shift+super+'"], "command": "toggle_quotes" },

  // Close other tabs
  { "keys": ["super+alt+w"], "command": "close_other_tabs" },

  // Dont change tab when doing this. Usually is a mistake
  { "keys": ["ctrl+tab"], "command": "noop" },

  // Escape of selection
  { "keys": ["escape"], "command": "move", "args": {"by": "characters", "forward": false},
    "context": [
      { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
      { "key": "panel_has_focus", "operator": "equal", "operand": false }
    ]
  },

  // Open views from controller, and partial from views
  { "keys": ["super+shift+i"], "command": "rails_open_view" },
  { "keys": ["super+shift+o"], "command": "rails_open_view" },

  // Emmet keybindings
  {
    "keys": ["ctrl+d"],
    "command": "emmet_balance",
    "args": { "direction": "outward" },
    "context": { "key": "selector", "operator": "equal", "operand": "(text.html, text.xml) - string - comment", "match_all": true },
  },
  {
    "keys": ["alt+d"],
    "command": "emmet_balance",
    "args": { "direction": "inward" },
    "context": { "key": "selector", "operator": "equal", "operand": "(text.html, text.xml) - string - comment", "match_all": true },
  },
  {
    "keys": ["super+e"],
    "command": "emmet_expand_abbreviation",
    "context": [
      {
        "operand": "source.css, source.sass, source.less, source.scss, source.stylus, source.postcss, source.jade, text.jade, source.pug, text.pug, text.slim, text.xml, text.html - source, text.haml, text.scala.html, source string",
        "operator": "equal",
        "match_all": true,
        "key": "selector"
      },
      {
        "operand": "storage.type.templatetag.django",
        "operator": "not_equal",
        "match_all": true,
        "key": "selector"
      },
      {
        "match_all": true,
        "key": "selection_empty"
      },
      {
        "operator": "equal",
        "operand": false,
        "match_all": true,
        "key": "has_next_field"
      },
      {
        "operator": "equal",
        "operand": false,
        "match_all": true,
        "key": "setting.disable_tab_abbreviations"
      },
      {
        "operand": false,
        "operator": "equal",
        "match_all": true,
        "key": "auto_complete_visible"
      },
    ]
  },
  {
    "keys": ["super+e"],
    "command": "emmet_expand_abbreviation",
    "context": [
      {
        "operand": "source.css, source.sass, source.less, source.scss, source.stylus, source.postcss, source.jade, text.jade, source.pug, text.pug, text.slim, text.xml, text.html - source, text.haml, text.scala.html, source string",
        "operator": "equal",
        "match_all": true,
        "key": "selector"
      },
      {
        "operand": "storage.type.templatetag.django",
        "operator": "not_equal",
        "match_all": true,
        "key": "selector"
      },
      {
        "match_all": true,
        "key": "selection_empty"
      },
      {
        "operator": "equal",
        "operand": false,
        "match_all": true,
        "key": "hamls_next_field"
      },
      {
        "operator": "equal",
        "operand": true,
        "match_all": true,
        "key": "auto_complete_visible"
      },
      {
        "operator": "equal",
        "operand": false,
        "match_all": true,
        "key": "setting.disable_tab_abbreviations_on_auto_complete"
      }
    ]
  },
]
